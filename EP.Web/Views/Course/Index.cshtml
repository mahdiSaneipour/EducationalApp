@model Tuple<List<BoxCourseViewModel>, int>
@using EP.Core.DTOs.MainPageViewModel;
@using EP.Core.Enums.Course;
@using EP.Domain.Entities.Course;
@{
    ViewData["Title"] = "Index";
    List<CourseGroup> groups = ViewData["CourseGroups"] as List<CourseGroup>;
    List<int> selected = ViewData["SCourseGroups"] as List<int>;
    int minimumPrice = (int) ViewData["MinimumPrice"];
    int maximumPrice = (int)ViewData["MaximumPrice"];
    string filter = (string) ViewData["Filter"];
    BoxCourseOrderByEnum orderBy = (BoxCourseOrderByEnum)ViewData["OrderBy"];
    BoxCourseGetTypeEnum getType = (BoxCourseGetTypeEnum)ViewData["GetType"];
}

<div class="container">
    <nav aria-label="breadcrumb">
        <ul class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">تاپ لرن</a></li>
            <li class="breadcrumb-item active"><a href="#">دوره ها</a></li>
            <li class="breadcrumb-item active" aria-current="page"> برنامه نویسی وب </li>
        </ul>
    </nav>
</div>

<div class="container">
    <form id="formFilter" asp-controller="Course" method="get">
        <input type="hidden" id="pageid" name="pageId" value="@ViewData["PageId"].ToString()"/>
        <section class="term-categories">

            <div class="top-bar">

                <header>
                    <h1> دوره های <span> برنامه نویسی وب </span> </h1> <span> @Model.Item1.Count() دوره </span>
                </header>

                <div class="row">
                    <div class="col-md-4 col-sm-12 col-xs-12 pull-right">
                        <div class="input">
                            <input type="text" name="filter" value="@((filter != "")? filter : "")" placeholder="موضوع مورد نظر ...">
                            <button><i class="zmdi zmdi-search"></i></button>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-xs-12 pull-right">
                        <div class="switch-field available">
                            <input id="available-filter-1" name="getType" value="@BoxCourseGetTypeEnum.All" @((getType == BoxCourseGetTypeEnum.All)? "checked":"") type="radio">
                            <label for="available-filter-1"> همه </label>
                            <input id="available-filter-2" name="getType" value="@BoxCourseGetTypeEnum.Buyable" @((getType == BoxCourseGetTypeEnum.Buyable)? "checked":"") type="radio">
                            <label for="available-filter-2"> خریدنی </label>
                            <input id="available-filter-3" name="getType" value="@BoxCourseGetTypeEnum.Free" @((getType == BoxCourseGetTypeEnum.Free)? "checked":"") type="radio">
                            <label for="available-filter-3"> رایگان </label>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-xs-12 pull-left">
                        <div class="select-ddl">
                            <select name="orderBy">

                                @if(orderBy == BoxCourseOrderByEnum.CreateDate){
                                    <option value="@BoxCourseOrderByEnum.CreateDate" selected> تاریخ انتشار </option>
                                } else {
                                    <option value="@BoxCourseOrderByEnum.CreateDate"> تاریخ انتشار </option>
                                }

                                @if(orderBy == BoxCourseOrderByEnum.UpdateDate){
                                    <option value="@BoxCourseOrderByEnum.UpdateDate" selected> آخرین بروز رسانی </option>
                                } else {
                                    <option value="@BoxCourseOrderByEnum.UpdateDate"> آخرین بروز رسانی </option>
                                }


                                @if(orderBy == BoxCourseOrderByEnum.Cheaper){
                                    <option value="@BoxCourseOrderByEnum.Cheaper" selected> ارزان ترین </option>
                                } else {
                                    <option value="@BoxCourseOrderByEnum.Cheaper"> ارزان ترین </option>
                                }

                                @if (orderBy == BoxCourseOrderByEnum.MostExpensive) {
                                    <option value="@BoxCourseOrderByEnum.MostExpensive" selected>گران ترین</option>
                                } else {
                                    <option value="@BoxCourseOrderByEnum.MostExpensive">گران ترین</option>
                                }

                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">

                <aside class="col-lg-3 col-md-4 col-sm-12 col-xs-12">

                    <section class="aside-section filter-by-price">
                        <header>
                            <h3> فیلتر بر اساس قیمت </h3>
                        </header>
                        <div class="price-range">
                            <input type="hidden" value="@((minimumPrice != 0)? minimumPrice : "")" id="min-value" name="minimumPrice">
                            <input type="hidden" value="@((maximumPrice != 0)? maximumPrice : "")" id="max-value" name="maximumPrice">
                            <div class="price-bar">
                                <div id="priceFilter"></div>
                            </div>
                            <div class="max-price">تا <span id="max-text">500000</span> تومان</div>
                            <div class="min-price">از <span id="min-text">20000</span> تومان</div>
                            <div class="clearfix"></div>
                        </div>
                    </section>

                    <section class="aside-section filter-by-category">
                        <header>
                            <h3> دسته بندی موضوعات </h3>
                        </header>
                        <div class="inner">
                            @{

                            }
                            <ul>
                               @foreach (var group in groups.Where(g=>g.ParentId==null))
                               {
                                   <li>
                                        <input type="checkbox" @((selected.Any(s=>s==group.GroupId)?"checked":"")) name="courseGroups" value="@group.GroupId" id="cat-1">
                                       <label for="cat-1"> @group.GroupeName </label>
                                   @if (groups.Any(g => g.ParentId == group.GroupId))
                                   {
                                       <ul>
                                           @foreach (var sub in groups.Where(g=>g.ParentId==group.GroupId))
                                           {
                                               <li>
                                                        <input @((selected.Any(s=>s==sub.GroupId)?"checked":"")) type="checkbox" name="courseGroups" value="@sub.GroupId" id="cat-1">
                                                        <label for="cat-1"> @sub.GroupeName </label>
                                               </li>
                                           }
                                       </ul>
                                   }

                                       </li>
                               }
                            </ul>
                        </div>
                    </section>

                </aside>

                <div class="col-lg-9 col-md-8 col-sm-12 col-xs-12">

                    <section class="terms-items">
                        <div class="row">
                            @foreach (var item in Model.Item1)
                            {
                                <partial name="Partial Views/_BoxCoursePartialView" model="@item" />
                            }
                        </div>


                        @if (Model.Item2 > 1)
                        {
                            <nav aria-label="Page navigation">
                                <ul class="pagination justify-content-center">
                           
                            @for(int i=1;i<= (int)Model.Item2; i++)
                            {
                                <li class="page-item"><a class="page-link" onclick="changePage(@i)" href="#">@i</a></li>
  
                            }
                                </ul>
                            </nav>
                        }

                    </section>

                </div>
            </div>
        </section>
    </form>
</div>

@section Scripts {
    <script src="/noUiSlider/nouislider.min.js"></script>
    <script src="/js/script.js"></script>
    <script type="text/javascript">

        function changePage(pageid) {
            $("#pageid").val(pageid);
            $("#formFilter").submit();
        }

        $(function () {

            var slider = document.getElementById('priceFilter');
            noUiSlider.create(slider, {
                start: [20000, 100000],
                step: 5000,
                connect: true,
                direction: 'rtl',
                range: {
                    'min': 20000,
                    'max': 100000
                }
            });

            var marginMin = document.getElementById('min-text'),
                marginMax = document.getElementById('max-text');

            slider.noUiSlider.on('update', function (values, handle) {
                var xvalue = Math.round(values[handle]);
                if (handle) {
                    marginMax.innerHTML = xvalue;
                } else {
                    marginMin.innerHTML = xvalue;
                }
                //console.log(values[handle]);
            });

            slider.noUiSlider.on('change', function (values, handle) {
                var xvalue = Math.round(values[handle]);
                if (handle) {
                    // setGetParameter('max_price', xvalue);
                    $('#max-value').val(xvalue);
                } else {
                    // setGetParameter('min_price', xvalue);
                    $('#min-value').val(xvalue);
                }
            });


            slider.noUiSlider.on('slide', function (values, handle) {

                console.log(values[0]);
                console.log(values[1]);

                var xvalue = Math.round(values[handle]);
                //updateSliderRange( Math.round(values[0]), Math.round(values[1]) );
            });

       

            function updateSliderRange(min, max) {
                slider.noUiSlider.updateOptions({
                    range: {
                        'min': min,
                        'max': max
                    }
                });
            }
        });
    </script>
}